{"ast":null,"code":"var _jsxFileName = \"/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/AdminPage/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"./adminLogin.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Authentication/AuthContext';\n\n// Validation schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required('Required')\n});\nexport default function AdminLogin() {\n  _s();\n  const {\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: AdminLoginSchema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          fetch(\"http://localhost:5001/api/admin/login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(values)\n          }).then(response => {\n            if (!response.ok) {\n              throw new Error('Invalid credentials');\n            }\n            return response.json();\n          }).then(data => {\n            localStorage.setItem('isLoggedIn', 'true');\n            alert('Admin login successful');\n            navigate('/admin/dashboard');\n            // Handle admin login success, e.g., redirect or store session data\n          }).catch(error => {\n            alert(error.message);\n          }).finally(() => setSubmitting(false));\n        },\n        children: ({\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Admin Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\",\n              className: `form-control ${errors.email && touched.email ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: `form-control ${errors.password && touched.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"WY2xZhE/7+PfqB71YQnRZE+IkEE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useContext","Formik","Form","Field","ErrorMessage","Yup","useNavigate","AuthContext","jsxDEV","_jsxDEV","AdminLoginSchema","object","shape","email","string","required","password","AdminLogin","_s","setIsLoggedIn","navigate","className","children","initialValues","validationSchema","onSubmit","values","setSubmitting","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","localStorage","setItem","alert","catch","error","message","finally","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","name","type","component","_c","$RefreshReg$"],"sources":["/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/AdminPage/AdminLogin.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"./adminLogin.css\"; \nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Authentication/AuthContext';\n\n\n// Validation schema\nconst AdminLoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .required('Required'),\n});\n\nexport default function AdminLogin() {\n    const { setIsLoggedIn } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={AdminLoginSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            fetch(\"http://localhost:5001/api/admin/login\", { \n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(values),\n            })\n            .then(response => {\n              if (!response.ok) {\n                throw new Error('Invalid credentials');\n              }\n              return response.json();\n            })\n            .then(data => {\n              localStorage.setItem('isLoggedIn', 'true');\n              alert('Admin login successful');\n              navigate('/admin/dashboard');\n              // Handle admin login success, e.g., redirect or store session data\n            })\n            .catch(error => {\n              alert(error.message);\n            })\n            .finally(() => setSubmitting(false));\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <h3>Admin Login</h3>\n              <div className=\"mb-3\">\n                <label>Email Address</label>\n                <Field name=\"email\" type=\"email\" className={`form-control ${errors.email && touched.email ? 'is-invalid' : ''}`} />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n              </div>\n\n              <div className=\"mb-3\">\n                <label>Password</label>\n                <Field name=\"password\" type=\"password\" className={`form-control ${errors.password && touched.password ? 'is-invalid' : ''}`} />\n                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}