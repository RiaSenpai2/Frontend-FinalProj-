{"ast":null,"code":"var _jsxFileName = \"/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Authentication/login_component.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"./login.css\";\n\n// Validation schema for the form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required('Required')\n});\nexport default function Login() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: LoginSchema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          fetch(\"http://localhost:5001/api/user/login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(values)\n          }).then(response => response.json()).then(data => {\n            console.log(data);\n            if (data.status === \"ok\") {\n              // Assuming the response includes user's first name and token\n              window.localStorage.setItem('loggedIn', true);\n              window.localStorage.setItem(\"email\", data.email);\n              window.localStorage.setItem(\"token\", data.token);\n              window.location.href = \"./\";\n              // Redirect if needed\n            } else {\n              alert('Login failed: ' + data.message);\n            }\n          }).catch(error => {\n            console.error('Error:', error);\n            alert('An error occurred');\n          }).finally(() => setSubmitting(false));\n        },\n        children: ({\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\",\n              className: `form-control ${errors.email && touched.email ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: `form-control ${errors.password && touched.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginSchema","object","shape","email","string","required","password","Login","className","children","initialValues","validationSchema","onSubmit","values","setSubmitting","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","status","window","localStorage","setItem","token","location","href","alert","message","catch","error","finally","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","name","type","component","_c","$RefreshReg$"],"sources":["/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Authentication/login_component.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport \"./login.css\"\n\n// Validation schema for the form\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string().required('Required'),\n});\n\n\n\nexport default function Login() {\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            fetch(\"http://localhost:5001/api/user/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(values),\n            })\n            .then(response => response.json())\n            .then(data => {\n              console.log(data);\n              if (data.status === \"ok\") {\n                // Assuming the response includes user's first name and token\n                window.localStorage.setItem('loggedIn', true);\n                window.localStorage.setItem(\"email\", data.email);\n                window.localStorage.setItem(\"token\", data.token);\n                window.location.href = \"./\";\n                // Redirect if needed\n              } else {\n                alert('Login failed: ' + data.message);\n              }\n            })\n            .catch(error => {\n              console.error('Error:', error);\n              alert('An error occurred');\n            })\n            .finally(() => setSubmitting(false));\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <h3>Sign In</h3>\n              <div className=\"mb-3\">\n                <label>Email Address</label>\n                <Field name=\"email\" type=\"email\" className={`form-control ${errors.email && touched.email ? 'is-invalid' : ''}`} />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n              </div>\n\n              <div className=\"mb-3\">\n                <label>Password</label>\n                <Field name=\"password\" type=\"password\" className={`form-control ${errors.password && touched.password ? 'is-invalid' : ''}`} />\n                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}