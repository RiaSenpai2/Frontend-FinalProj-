{"ast":null,"code":"var _jsxFileName = \"/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Payment/Payment.js\",\n  _s = $RefreshSig$();\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      try {\n        const {\n          data\n        } = await axios.post('http://localhost:5001/create-payment-intent', {\n          amount: amount,\n          // Use the passed amount for the payment\n          id\n        });\n        const confirmed = await stripe.confirmCardPayment(data.clientSecret);\n        if (confirmed.paymentIntent.status === 'succeeded') {\n          console.log('Payment successful!');\n          // Handle successful payment here\n        }\n      } catch (error) {\n        console.log('Payment failed:', error);\n        // Handle payment errors here\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","data","post","amount","confirmed","confirmCardPayment","clientSecret","paymentIntent","status","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Payment/Payment.js"],"sourcesContent":["import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      const { id } = paymentMethod;\n      try {\n        const { data } = await axios.post('http://localhost:5001/create-payment-intent', { \n            amount: amount, // Use the passed amount for the payment\n            id \n        });\n\n        const confirmed = await stripe.confirmCardPayment(data.clientSecret);\n        if (confirmed.paymentIntent.status === 'succeeded') {\n          console.log('Payment successful!');\n          // Handle successful payment here\n        }\n      } catch (error) {\n        console.log('Payment failed:', error);\n        // Handle payment errors here\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAM;MAAEC,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMN,MAAM,CAACO,mBAAmB,CAAC;MAChEC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAER,QAAQ,CAACS,UAAU,CAAClB,WAAW;IACvC,CAAC,CAAC;IAEF,IAAI,CAACa,KAAK,EAAE;MACV,MAAM;QAAEM;MAAG,CAAC,GAAGL,aAAa;MAC5B,IAAI;QACF,MAAM;UAAEM;QAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,6CAA6C,EAAE;UAC7EC,MAAM,EAAEA,MAAM;UAAE;UAChBH;QACJ,CAAC,CAAC;QAEF,MAAMI,SAAS,GAAG,MAAMf,MAAM,CAACgB,kBAAkB,CAACJ,IAAI,CAACK,YAAY,CAAC;QACpE,IAAIF,SAAS,CAACG,aAAa,CAACC,MAAM,KAAK,WAAW,EAAE;UAClDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClC;QACF;MACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACde,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEhB,KAAK,CAAC;QACrC;MACF;IACF;EACF,CAAC;;EAED,oBACER,OAAA;IAAMyB,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBAC3B1B,OAAA,CAACL,WAAW;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf9B,OAAA;MAAQW,IAAI,EAAC,QAAQ;MAACoB,QAAQ,EAAE,CAAC5B,MAAO;MAAAuB,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAxCID,YAAY;EAAA,QACDL,SAAS,EACPC,WAAW;AAAA;AAAAmC,EAAA,GAFxB/B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}