{"ast":null,"code":"var _jsxFileName = \"/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Seller/Seller.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from 'react-router-dom'; // Updated to use useNavigate\n// import { Button, Form, Modal } from 'react-bootstrap';\n// import './Seller.css';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import axios from 'axios';\n\n// const Seller = () => {\n//     const navigate = useNavigate(); // Updated to useNavigate\n//     const initialFormData = {\n//         name: '',\n//         email: '',\n//         departureCity: '',\n//         destination: '',\n//         flightNum: '',\n//         date: new Date(),\n//         time: '',\n//         availableSpace: '',\n//         FlightCarrier: '',\n//         AskingPrice: '',\n//         additionalInfo: ''\n//     };\n\n//     const [formData, setFormData] = useState(initialFormData);\n//     const [errors, setErrors] = useState({});\n//     const [showModal, setShowModal] = useState(false);\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//     useEffect(() => {\n//         const token = window.localStorage.getItem(\"token\");\n//         if (!token) {\n//             alert(\"You must be logged in to post a listing\");\n//             navigate(\"/login\"); // Updated to use navigate\n//         } else {\n//             setIsAuthenticated(true);\n//         }\n//     }, [navigate]); // navigate added to the dependency array\n\n//     const handleInputChange = (e, field) => {\n//         setFormData({ ...formData, [field]: e.target.value });\n//     };\n\n//     const handleDateChange = (date) => {\n//         setFormData({ ...formData, date: date });\n//     };\n\n//     const validateForm = () => {\n//         let tempErrors = {};\n//         if (!formData.name) tempErrors.name = \"Name is required\";\n//         if (!formData.email) tempErrors.email = \"Email is required\";\n//         // Add more validation as needed\n//         setErrors(tempErrors);\n//         return Object.keys(tempErrors).length === 0;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (validateForm()) {\n//             try {\n//                 const response = await axios.post('http://localhost:5001/api/listings', formData);\n//                 console.log(response.data);\n//                 setFormData(initialFormData);\n//                 setShowModal(true);\n//             } catch (error) {\n//                 console.error(\"Error submitting form:\", error);\n//             }\n//         }\n//     };\n\n//     if (!isAuthenticated) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div className=\"introTag\">\n//             <h1 style={{ marginTop: \"50px\" }}>Hi, post your listing</h1>\n//             <Form onSubmit={handleSubmit}>\n//                 {/* Form Groups for input fields */}\n//                 {/* ... [Rest of your form groups and inputs] */}\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n//                     <Form.Label>Name</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter name\" \n//                         value={formData.name}\n//                         onChange={(e) => handleInputChange(e, 'name')} \n//                         isInvalid={!!errors.name}\n//                     />\n//                     <Form.Control.Feedback type=\"invalid\">\n//                         {errors.name}\n//                     </Form.Control.Feedback>\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>Email Address</Form.Label>\n//                     <Form.Control \n//                         type=\"email\" \n//                         placeholder=\"Enter email\" \n//                         value={formData.email}\n//                         onChange={(e) => handleInputChange(e, 'email')} \n//                         isInvalid={!!errors.email}\n//                     />\n//                     <Form.Control.Feedback type=\"invalid\">\n//                         {errors.email}\n//                     </Form.Control.Feedback>\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDepartureCity\">\n//                     <Form.Label>Departure City</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter departure city\" \n//                         value={formData.departureCity}\n//                         onChange={(e) => handleInputChange(e, 'departureCity')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDestination\">\n//                     <Form.Label>Destination</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter destination\" \n//                         value={formData.destination}\n//                         onChange={(e) => handleInputChange(e, 'destination')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicFlightNum\">\n//                     <Form.Label>Flight Number</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Flight Number\" \n//                         value={formData.flightNum}\n//                         onChange={(e) => handleInputChange(e, 'flightNum')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n//                     <Form.Label>Date</Form.Label>\n//                     <DatePicker\n//                         selected={formData.date}\n//                         onChange={handleDateChange}\n//                         className=\"form-control\"\n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n//                     <Form.Label>Time</Form.Label>\n//                     <Form.Control \n//                         type=\"time\" \n//                         value={formData.time}\n//                         onChange={(e) => handleInputChange(e, 'time')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAvailableSpace\">\n//                     <Form.Label>Available Space</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter available space\" \n//                         value={formData.availableSpace}\n//                         onChange={(e) => handleInputChange(e, 'availableSpace')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicFlightCarrier\">\n//                     <Form.Label>Flight Carrier</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Flight Carrier\" \n//                         value={formData.FlightCarrier}\n//                         onChange={(e) => handleInputChange(e, 'FlightCarrier')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAskingPrice\">\n//                     <Form.Label>Asking Price</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Asking Price\" \n//                         value={formData.AskingPrice}\n//                         onChange={(e) => handleInputChange(e, 'AskingPrice')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAdditionalInfo\">\n//                     <Form.Label>Anything that the Buyer Should Know?</Form.Label>\n//                     <Form.Control \n//                         as=\"textarea\" \n//                         rows={3} \n//                         placeholder=\"Enter additional information\" \n//                         value={formData.additionalInfo}\n//                         onChange={(e) => handleInputChange(e, 'additionalInfo')} \n//                     />\n//                 </Form.Group>\n//                 <Button variant=\"primary\" type=\"submit\">\n//                     Post My Listing\n//                 </Button>\n//             </Form>\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Success</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Listing was successfully posted!</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//                         Close\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n//         </div>\n//     );\n// };\n\n// export default Seller;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom'; // Updated to use useNavigate\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport './Seller.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Seller = () => {\n  _s();\n  const [completionPercentage, setCompletionPercentage] = useState(0);\n  const calculateCompletionPercentage = () => {\n    const formFields = ['name', 'email', 'departureCity', 'destination', 'flightNum', 'time', 'availableSpace', 'FlightCarrier', 'askingPrice', 'additionalInfo'];\n    let filledFields = formFields.reduce((acc, field) => acc + (formData[field] ? 1 : 0), 0);\n    return Math.round(filledFields / formFields.length * 100);\n  };\n  const navigate = useNavigate(); // Updated to useNavigate\n  const initialFormData = {\n    name: '',\n    email: '',\n    departureCity: '',\n    destination: '',\n    flightNum: '',\n    date: new Date(),\n    time: '',\n    availableSpace: '',\n    FlightCarrier: '',\n    askingPrice: '',\n    additionalInfo: ''\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [errors, setErrors] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    setCompletionPercentage(calculateCompletionPercentage());\n    const token = window.localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"You must be logged in to post a listing\");\n      navigate(\"/login\"); // Updated to use navigate\n    } else {\n      setIsAuthenticated(true);\n    }\n  }, [navigate, formData]); // navigate added to the dependency array\n\n  const handleInputChange = (e, field) => {\n    setFormData({\n      ...formData,\n      [field]: e.target.value\n    });\n  };\n  const handleDateChange = date => {\n    setFormData({\n      ...formData,\n      date: date\n    });\n  };\n  const validateForm = () => {\n    let tempErrors = {};\n    if (!formData.name) tempErrors.name = \"Name is required\";\n    if (!formData.email) tempErrors.email = \"Email is required\";\n    // Add more validation as needed\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        const response = await axios.post('http://localhost:5001/api/listings', formData);\n        console.log(response.data);\n        setFormData(initialFormData);\n        setShowModal(true);\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n      }\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seller-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"Post your listing here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: completionPercentage,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-percentage\",\n      children: [\"Completion: \", completionPercentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Basic Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-bod\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: formData.name,\n              onChange: e => handleInputChange(e, 'name'),\n              isInvalid: !!errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: formData.email,\n              onChange: e => handleInputChange(e, 'email'),\n              isInvalid: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Flight Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-bod\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicDepartureCity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Departure City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter departure city\",\n              value: formData.departureCity,\n              onChange: e => handleInputChange(e, 'departureCity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicDestination\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter destination\",\n              value: formData.destination,\n              onChange: e => handleInputChange(e, 'destination')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicFlightNum\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Flight Number\",\n              value: formData.flightNum,\n              onChange: e => handleInputChange(e, 'flightNum')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: formData.date,\n              onChange: handleDateChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicTime\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"time\",\n              value: formData.time,\n              onChange: e => handleInputChange(e, 'time')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicAvailableSpace\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Available Space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter available space\",\n              value: formData.availableSpace,\n              onChange: e => handleInputChange(e, 'availableSpace')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicFlightCarrier\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Flight Carrier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Flight Carrier\",\n              value: formData.FlightCarrier,\n              onChange: e => handleInputChange(e, 'FlightCarrier')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Baggage Space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-bod\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicAskingPrice\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Asking Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Asking Price\",\n              value: formData.askingPrice,\n              onChange: e => handleInputChange(e, 'askingPrice')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicAdditionalInfo\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Anything that the Buyer Should Know?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Enter additional information\",\n              value: formData.additionalInfo,\n              onChange: e => handleInputChange(e, 'additionalInfo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-btn\",\n        type: \"submit\",\n        children: \"Post My Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Listing was successfully posted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n};\n_s(Seller, \"KU3KM127dpD6d7pSa/zcGM8ieV8=\", false, function () {\n  return [useNavigate];\n});\n_c = Seller;\nexport default Seller;\nvar _c;\n$RefreshReg$(_c, \"Seller\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Button","Form","Modal","DatePicker","axios","jsxDEV","_jsxDEV","Seller","_s","completionPercentage","setCompletionPercentage","calculateCompletionPercentage","formFields","filledFields","reduce","acc","field","formData","Math","round","length","navigate","initialFormData","name","email","departureCity","destination","flightNum","date","Date","time","availableSpace","FlightCarrier","askingPrice","additionalInfo","setFormData","errors","setErrors","showModal","setShowModal","isAuthenticated","setIsAuthenticated","token","window","localStorage","getItem","alert","handleInputChange","e","target","value","handleDateChange","validateForm","tempErrors","Object","keys","handleSubmit","preventDefault","response","post","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","max","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Feedback","selected","as","rows","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/riatyagi/NEU/INFO/Final Project/finalproj/src/Components/Seller/Seller.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from 'react-router-dom'; // Updated to use useNavigate\n// import { Button, Form, Modal } from 'react-bootstrap';\n// import './Seller.css';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import axios from 'axios';\n\n// const Seller = () => {\n//     const navigate = useNavigate(); // Updated to useNavigate\n//     const initialFormData = {\n//         name: '',\n//         email: '',\n//         departureCity: '',\n//         destination: '',\n//         flightNum: '',\n//         date: new Date(),\n//         time: '',\n//         availableSpace: '',\n//         FlightCarrier: '',\n//         AskingPrice: '',\n//         additionalInfo: ''\n//     };\n\n//     const [formData, setFormData] = useState(initialFormData);\n//     const [errors, setErrors] = useState({});\n//     const [showModal, setShowModal] = useState(false);\n//     const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//     useEffect(() => {\n//         const token = window.localStorage.getItem(\"token\");\n//         if (!token) {\n//             alert(\"You must be logged in to post a listing\");\n//             navigate(\"/login\"); // Updated to use navigate\n//         } else {\n//             setIsAuthenticated(true);\n//         }\n//     }, [navigate]); // navigate added to the dependency array\n\n//     const handleInputChange = (e, field) => {\n//         setFormData({ ...formData, [field]: e.target.value });\n//     };\n\n//     const handleDateChange = (date) => {\n//         setFormData({ ...formData, date: date });\n//     };\n\n//     const validateForm = () => {\n//         let tempErrors = {};\n//         if (!formData.name) tempErrors.name = \"Name is required\";\n//         if (!formData.email) tempErrors.email = \"Email is required\";\n//         // Add more validation as needed\n//         setErrors(tempErrors);\n//         return Object.keys(tempErrors).length === 0;\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (validateForm()) {\n//             try {\n//                 const response = await axios.post('http://localhost:5001/api/listings', formData);\n//                 console.log(response.data);\n//                 setFormData(initialFormData);\n//                 setShowModal(true);\n//             } catch (error) {\n//                 console.error(\"Error submitting form:\", error);\n//             }\n//         }\n//     };\n\n//     if (!isAuthenticated) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div className=\"introTag\">\n//             <h1 style={{ marginTop: \"50px\" }}>Hi, post your listing</h1>\n//             <Form onSubmit={handleSubmit}>\n//                 {/* Form Groups for input fields */}\n//                 {/* ... [Rest of your form groups and inputs] */}\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n//                     <Form.Label>Name</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter name\" \n//                         value={formData.name}\n//                         onChange={(e) => handleInputChange(e, 'name')} \n//                         isInvalid={!!errors.name}\n//                     />\n//                     <Form.Control.Feedback type=\"invalid\">\n//                         {errors.name}\n//                     </Form.Control.Feedback>\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//                     <Form.Label>Email Address</Form.Label>\n//                     <Form.Control \n//                         type=\"email\" \n//                         placeholder=\"Enter email\" \n//                         value={formData.email}\n//                         onChange={(e) => handleInputChange(e, 'email')} \n//                         isInvalid={!!errors.email}\n//                     />\n//                     <Form.Control.Feedback type=\"invalid\">\n//                         {errors.email}\n//                     </Form.Control.Feedback>\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDepartureCity\">\n//                     <Form.Label>Departure City</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter departure city\" \n//                         value={formData.departureCity}\n//                         onChange={(e) => handleInputChange(e, 'departureCity')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDestination\">\n//                     <Form.Label>Destination</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter destination\" \n//                         value={formData.destination}\n//                         onChange={(e) => handleInputChange(e, 'destination')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicFlightNum\">\n//                     <Form.Label>Flight Number</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Flight Number\" \n//                         value={formData.flightNum}\n//                         onChange={(e) => handleInputChange(e, 'flightNum')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n//                     <Form.Label>Date</Form.Label>\n//                     <DatePicker\n//                         selected={formData.date}\n//                         onChange={handleDateChange}\n//                         className=\"form-control\"\n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n//                     <Form.Label>Time</Form.Label>\n//                     <Form.Control \n//                         type=\"time\" \n//                         value={formData.time}\n//                         onChange={(e) => handleInputChange(e, 'time')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAvailableSpace\">\n//                     <Form.Label>Available Space</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter available space\" \n//                         value={formData.availableSpace}\n//                         onChange={(e) => handleInputChange(e, 'availableSpace')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicFlightCarrier\">\n//                     <Form.Label>Flight Carrier</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Flight Carrier\" \n//                         value={formData.FlightCarrier}\n//                         onChange={(e) => handleInputChange(e, 'FlightCarrier')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAskingPrice\">\n//                     <Form.Label>Asking Price</Form.Label>\n//                     <Form.Control \n//                         type=\"text\" \n//                         placeholder=\"Enter Asking Price\" \n//                         value={formData.AskingPrice}\n//                         onChange={(e) => handleInputChange(e, 'AskingPrice')} \n//                     />\n//                 </Form.Group>\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicAdditionalInfo\">\n//                     <Form.Label>Anything that the Buyer Should Know?</Form.Label>\n//                     <Form.Control \n//                         as=\"textarea\" \n//                         rows={3} \n//                         placeholder=\"Enter additional information\" \n//                         value={formData.additionalInfo}\n//                         onChange={(e) => handleInputChange(e, 'additionalInfo')} \n//                     />\n//                 </Form.Group>\n//                 <Button variant=\"primary\" type=\"submit\">\n//                     Post My Listing\n//                 </Button>\n//             </Form>\n//             <Modal show={showModal} onHide={() => setShowModal(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Success</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Listing was successfully posted!</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//                         Close\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n//         </div>\n//     );\n// };\n\n// export default Seller;\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom'; // Updated to use useNavigate\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport './Seller.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\n\nconst Seller = () => {\n    const [completionPercentage, setCompletionPercentage] = useState(0);\n\n    const calculateCompletionPercentage = () => {\n        const formFields = ['name', 'email', 'departureCity', 'destination', 'flightNum', 'time', 'availableSpace', 'FlightCarrier', 'askingPrice', 'additionalInfo'];\n        let filledFields = formFields.reduce((acc, field) => acc + (formData[field] ? 1 : 0), 0);\n        return Math.round((filledFields / formFields.length) * 100);\n    };\n    const navigate = useNavigate(); // Updated to useNavigate\n    const initialFormData = {\n        name: '',\n        email: '',\n        departureCity: '',\n        destination: '',\n        flightNum: '',\n        date: new Date(),\n        time: '',\n        availableSpace: '',\n        FlightCarrier: '',\n        askingPrice: '',\n        additionalInfo: ''\n    };\n\n    const [formData, setFormData] = useState(initialFormData);\n    const [errors, setErrors] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    \n\n    useEffect(() => {\n\n   \n\n        setCompletionPercentage(calculateCompletionPercentage());\n        const token = window.localStorage.getItem(\"token\");\n        if (!token) {\n            alert(\"You must be logged in to post a listing\");\n            navigate(\"/login\"); // Updated to use navigate\n        } else {\n            setIsAuthenticated(true);\n        }\n    }, [navigate,formData]); // navigate added to the dependency array\n\n    const handleInputChange = (e, field) => {\n        setFormData({ ...formData, [field]: e.target.value });\n    };\n\n    const handleDateChange = (date) => {\n        setFormData({ ...formData, date: date });\n    };\n\n    const validateForm = () => {\n        let tempErrors = {};\n        if (!formData.name) tempErrors.name = \"Name is required\";\n        if (!formData.email) tempErrors.email = \"Email is required\";\n        // Add more validation as needed\n        setErrors(tempErrors);\n        return Object.keys(tempErrors).length === 0;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (validateForm()) {\n            try {\n                const response = await axios.post('http://localhost:5001/api/listings', formData);\n                console.log(response.data);\n                setFormData(initialFormData);\n                setShowModal(true);\n            } catch (error) {\n                console.error(\"Error submitting form:\", error);\n            }\n        }\n    };\n\n    if (!isAuthenticated) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"seller-container\">\n            <h1 className=\"form-title\">Post your listing here!</h1>\n            <progress value={completionPercentage} max=\"100\"></progress> {/* Progress bar */}\n            <div className=\"completion-percentage\">Completion: {completionPercentage}%</div>\n            <Form onSubmit={handleSubmit}>\n                {/* Card 1: Basic Info */}\n\n                \n                <div className=\"postcard\">\n                    <div className=\"card-header\">Basic Info</div>\n                    <div className=\"card-bod\">\n                        {/* Name and Email form fields */}\n                        {/* ... */}\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter name\" \n                        value={formData.name}\n                        onChange={(e) => handleInputChange(e, 'name')} \n                        isInvalid={!!errors.name}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type=\"email\" \n                        placeholder=\"Enter email\" \n                        value={formData.email}\n                        onChange={(e) => handleInputChange(e, 'email')} \n                        isInvalid={!!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                    </div>\n                </div>\n\n                {/* Card 2: Flight Info */}\n                <div className=\"postcard\">\n                    <div className=\"card-header\">Flight Info</div>\n                    <div className=\"card-bod\">\n                        {/* Departure City, Destination, Flight Number, and Flight Carrier form fields */}\n                        {/* Include your existing form groups for the above fields here */}\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicDepartureCity\">\n                    <Form.Label>Departure City</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter departure city\" \n                        value={formData.departureCity}\n                        onChange={(e) => handleInputChange(e, 'departureCity')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicDestination\">\n                    <Form.Label>Destination</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter destination\" \n                        value={formData.destination}\n                        onChange={(e) => handleInputChange(e, 'destination')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicFlightNum\">\n                    <Form.Label>Flight Number</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Flight Number\" \n                        value={formData.flightNum}\n                        onChange={(e) => handleInputChange(e, 'flightNum')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n                    <Form.Label>Date</Form.Label>\n                    <DatePicker\n                        selected={formData.date}\n                        onChange={handleDateChange}\n                        className=\"form-control\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control \n                        type=\"time\" \n                        value={formData.time}\n                        onChange={(e) => handleInputChange(e, 'time')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicAvailableSpace\">\n                    <Form.Label>Available Space</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter available space\" \n                        value={formData.availableSpace}\n                        onChange={(e) => handleInputChange(e, 'availableSpace')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicFlightCarrier\">\n                    <Form.Label>Flight Carrier</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Flight Carrier\" \n                        value={formData.FlightCarrier}\n                        onChange={(e) => handleInputChange(e, 'FlightCarrier')} \n                    />\n                </Form.Group>\n                        \n                    </div>\n                </div>\n\n                {/* Card 3: Baggage Space */}\n                <div className=\"postcard\">\n                    <div className=\"card-header\">Baggage Space</div>\n                    <div className=\"card-bod\">\n                        {/* Asking Price, Luggage Space, and Additional Info form fields */}\n                        {/* Include your existing form groups for the above fields here */}\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicAskingPrice\">\n                    <Form.Label>Asking Price</Form.Label>\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Enter Asking Price\" \n                        value={formData.askingPrice}\n                        onChange={(e) => handleInputChange(e, 'askingPrice')} \n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicAdditionalInfo\">\n                    <Form.Label>Anything that the Buyer Should Know?</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        rows={3} \n                        placeholder=\"Enter additional information\" \n                        value={formData.additionalInfo}\n                        onChange={(e) => handleInputChange(e, 'additionalInfo')} \n                    />\n                </Form.Group>\n                    </div>\n                </div>\n\n                <Button className=\"submit-btn\" type=\"submit\">\n                    Post My Listing\n                </Button>\n            </Form>\n\n            {/* Modal structure remains the same */}\n            {/* ... */}\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Success</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Listing was successfully posted!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Seller;"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}